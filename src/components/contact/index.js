import React from "react";
import ContactPhoneIcon from "@material-ui/icons/ContactPhone";
import { makeStyles, Tooltip } from "@material-ui/core";
import withAlelrtAndDialog from "../../hoc/withAlertAndDialog";
// import swal from "@sweetalert/with-react";
import ContactInfo from "./contactInfo";
import emojiPhone from "../../images/phone-call.jpg"

const useStyles = makeStyles((theme) => ({
  contactIcon: {
    cursor: "pointer",
    animation: `$zoominoutsinglefeatured 2s infinite`,
  },
callicon:{
  fontSize: "24px",
   color: "#6441A5",
  background: "white",
  height: "40px",
  width: "40px",
  /* text-align: center, */
  margin: "auto",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  borderRadius: "50%",
},
  "@keyframes zoominoutsinglefeatured": {
    "0%": {
      transform: "scale(1, 1)",
    },
    "50%": {
      transform: "scale(1.2, 1.2)",
    },
    "100%": {
      transform: "scale(1, 1)",
    },
  },
//   --
slide_in_fwd_br: {
    WebkitAnimation:
      `$slide-in-fwd-br 0.4s cubic-bezier(0.250, 0.460, 0.450, 0.940) both`,
    animation:
      `$slide-in-fwd-br 0.4s cubic-bezier(0.250, 0.460, 0.450, 0.940) both`,
  },
  /* ----------------------------------------------
   * Generated by Animista on 2021-8-29 23:30:44
   * Licensed under FreeBSD License.
   * See http://animista.net/license for more info.
   * w: http://animista.net, t: @cssanimista
   * ---------------------------------------------- */

  /**
   * ----------------------------------------
   * animation slide-in-fwd-br
   * ----------------------------------------
   */
  "@-webkit-keyframes slide-in-fwd-br": {
    "0%": {
      "-webkit-transform":
        "translateZ(-1400px) translateY(800px) translateX(1000px)",
      transform: "translateZ(-1400px) translateY(800px) translateX(1000px)",
      opacity: 0,
    },
    "100%": {
      "-webkit-transform": "translateZ(0) translateY(0) translateX(0)",
      transform: "translateZ(0) translateY(0) translateX(0)",
      opacity: 1,
    },
  },
  "@keyframes slide-in-fwd-br": {
    "0%": {
      "-webkit-transform":
        "translateZ(-1400px) translateY(800px) translateX(1000px)",
      transform: "translateZ(-1400px) translateY(800px) translateX(1000px)",
      opacity: 0,
    },
    "100%": {
      "-webkit-transform": "translateZ(0) translateY(0) translateX(0)",
      transform: "translateZ(0) translateY(0) translateX(0)",
      opacity: 1,
    },
  },
  // --

  /* ----------------------------------------------
   * Generated by Animista on 2021-8-29 23:37:1
   * Licensed under FreeBSD License.
   * See http://animista.net/license for more info.
   * w: http://animista.net, t: @cssanimista
   * ---------------------------------------------- */

  /**
   * ----------------------------------------
   * animation slide-out-bck-right
   * ----------------------------------------
   */
  slide_out_bck_right: {
    WebkitAnimation:
      `$slide-out-bck-right 0.5s cubic-bezier(0.550, 0.085, 0.680, 0.530) both`,
    animation:
      `$slide-out-bck-right 0.5s cubic-bezier(0.550, 0.085, 0.680, 0.530) both`,
  },
  "@-webkit-keyframes slide-out-bck-right": {
    "0%": {
      "-webkit-transform": "translateZ(0) translateX(0)",
      transform: "translateZ(0) translateX(0)",
      opacity: 1,
    },
    "100%": {
      "-webkit-transform": "translateZ(-1100px) translateX(1000px)",
      transform: "translateZ(-1100px) translateX(1000px)",
      opacity: 0,
    },
  },
  "@keyframes slide-out-bck-right": {
    "0%": {
      "-webkit-transform": "translateZ(0) translateX(0)",
      transform: "translateZ(0) translateX(0)",
      opacity: 1,
    },
    "100%": {
      "-webkit-transform": "translateZ(-1100px) translateX(1000px)",
      transform: "translateZ(-1100px) translateX(1000px)",
      opacity: 0,
    },
  },
}));
function ContactIcon(props) {
  const classes = useStyles();
  const openDialog = () => {
    props.dialog.setDialog({
      ...props.dialog,
      open: true,
      title: "",
      positiveBtnDontShow: true,
      body: <ContactInfo />,
      //   positiveBtn: "SAVE",
      negativeBtn: (
        <div>
          <span style={{ fontSize: "12px" }}>Go Back</span>{" "}
          <span style={{ fontSize: "16px" }}>üëã</span>
        </div>
      ),
      onOk: () => {},
      onCancel: () => {
        props.dialog.setDialog({
          ...props.dialog,
          open: false,
          title: "",
          positiveBtnDontShow: true,
          body: <ContactInfo />,
          negativeBtn: (
            <div>
              <span style={{ fontSize: "12px" }}>Go Back</span>{" "}
              <span style={{ fontSize: "16px" }}>üëã</span>
            </div>
          ),
          onOk: () => {},
          onCancel: () => {},
        });
      },
    });
    // swal({
    //   buttons: {
    //     cancel: "Close",
    //   },
    //   content: <ContactInfo />,
    // });
  };
  return (
    <div className={`${classes.contactIcon}`}>
      <Tooltip title="Reach Me" arrow>
        <div
          onClick={() => {
            openDialog();
          }}
          style={{ fontSize: "2rem" }}
        >
          {/* üßê */}
          {/* <img src={emojiPhone} width={50} height={50}/> */}
          <i class={`fa ${classes.callicon}`}>&#xf095;</i>
        </div>
        {/* <ContactPhoneIcon
          color="secondary"
          fontSize="large"
          onClick={() => {
            openDialog();
          }}
        /> */}
      </Tooltip>
    </div>
  );
}

export default withAlelrtAndDialog(ContactIcon);
